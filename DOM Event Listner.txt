In the Document Object Model (DOM), an event listener is a function that is attached to an HTML element, and it waits for a specific event to occur, such as a user clicking a button, moving the mouse over an element, or pressing a key on the keyboard. When the event occurs, the listener is triggered, and the function is executed.

Here are some commonly used event listeners in DOM:

click: This event is triggered when the user clicks on an element.

mouseover: This event is triggered when the user moves the mouse over an element.

keydown: This event is triggered when the user presses a key on the keyboard.

submit: This event is triggered when the user submits a form.

load: This event is triggered when the page has finished loading.

change: This event is triggered when the user changes the value of a form input.

To add an event listener to an HTML element using JavaScript, you can use the addEventListener() method. 


Here's an example:


                let myButton = document.getElementById("myButton");

                myButton.addEventListener("click", function() {
                 // This function will be executed when the button is clicked
                });

In this example, we get a reference to an HTML button element with the ID "myButton", and then we attach a click event listener to it using addEventListener(). When the button is clicked, the anonymous function that we pass to addEventListener() will be executed.